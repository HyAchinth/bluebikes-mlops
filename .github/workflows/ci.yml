name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  airflow-dag-tests:
    name: Airflow DAG import tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare .env for Airflow
        working-directory: airflow
        run: |
          cp .env.example .env
          sed -i 's/^OWM_API_KEY=.*/OWM_API_KEY=dummykey123/' .env

      - name: Start Airflow (Docker Compose)
        working-directory: airflow
        run: docker compose up -d --build

      - name: Install pytest in container
        run: docker compose -f airflow/docker-compose.yml exec -T airflow python -m pip install -q pytest

      - name: Copy repo bits into container (tests + airflow/)
        run: |
          docker compose -f airflow/docker-compose.yml cp tests airflow:/opt/airflow/tests
          docker compose -f airflow/docker-compose.yml cp airflow airflow:/opt/airflow/airflow

      - name: Run DAG tests inside container
        run: |
          docker compose -f airflow/docker-compose.yml exec -T airflow bash -lc '
            export AIRFLOW__CORE__BASE_LOG_FOLDER=/tmp/airflow_logs
            export AIRFLOW__LOGGING__BASE_LOG_FOLDER=/tmp/airflow_logs
            export AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/tmp/airflow_logs/scheduler
            export AIRFLOW__LOGGING__PROCESSOR_LOG_LOCATION="/tmp/airflow_logs/scheduler/%(ds)s"
            mkdir -p /tmp/airflow_logs/scheduler
            python -m pytest -q /opt/airflow/tests/test_dags.py
          '

      - name: Show logs on failure
        if: failure()
        working-directory: airflow
        run: |
          docker compose ps
          docker compose logs --tail=200 airflow || true
          docker compose logs --tail=200 airflow-postgres || true

      - name: Teardown
        if: always()
        working-directory: airflow
        run: docker compose down -v
  test-and-build:
    name: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          [ -f services/api/requirements.txt ] && pip install -r services/api/requirements.txt || true

      - name: Run tests (exclude Airflow DAG tests)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m pytest -q --ignore=tests/test_dags.py

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & (on push) push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: services/api/Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ghcr.io/hyachinth/bluebikes-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
